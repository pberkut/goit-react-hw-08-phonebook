{"version":3,"file":"static/js/226.88ca3109.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","utils/handleFilterContacts.js","components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Wrapper/Wrapper.styled.js","components/Wrapper/Wrapper.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { handleFilterContacts } from 'utils/handleFilterContacts';\n\nconst selectContacts = state => state.contacts.items;\n\nconst selectIsLoading = state => state.contacts.isLoading;\n\nconst selectError = state => state.contacts.error;\n\nconst selectFilterValue = state => state.filter;\n\nconst selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    return handleFilterContacts(contacts, filterValue);\n  }\n);\n\nexport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilterValue,\n  selectFilteredContacts,\n};\n","const handleFilterContacts = (contacts, filterValue) =>\n  contacts.filter(contact =>\n    [contact.name.toLowerCase(), contact.number]\n      .join(' ')\n      .includes(filterValue.toLowerCase().trim())\n  );\n\n// const handleFilterContacts = (items, key, filteredValue) =>\n//   items.filter(item =>\n//     item[key].toLowerCase().includes(filteredValue.toLowerCase().trim())\n//   );\n\nexport { handleFilterContacts };\n","import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContainerStyled } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerStyled>{children}</ContainerStyled>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Container };\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  text-align: center;\n`;\n\nexport const SectionStyle = styled.div`\n  width: 450px;\n  padding: 10px;\n  border: 1px solid lightgrey;\n  background-color: #ffffe6;\n  :last-of-type {\n    min-height: 200px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { SectionStyle, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionStyle>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionStyle>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport { Section };\n","import styled from 'styled-components';\nimport {\n  ErrorMessage as YupErrorMessage,\n  Field as FieldFormik,\n  Form as FormFormik,\n} from 'formik';\n\nexport const Form = styled(FormFormik)`\n  /* display: flex; */\n  /* flex-direction: column; */\n`;\n\nexport const ErrorMessage = styled(YupErrorMessage)`\n  font-size: 11px;\n  color: red;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  height: 60px;\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nexport const Field = styled(FieldFormik)`\n  /* display: block; */\n  /* text-align: center; */\n  /* margin-left: 20px;\n  margin-right: 20px; */\n`;\n\nexport const Button = styled.button`\n  /* margin-top: 8px; */\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { ErrorMessage, Form } from './ContactForm.styled';\nimport { Notify } from 'notiflix';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Center,\n} from '@chakra-ui/react';\n\nconst INITIAL_VALUE = {\n  name: '',\n  number: '',\n};\n\nconst ContactFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Must be 3 characters or more')\n    .max(50, 'Must be 50 characters or less')\n    .required('Required'),\n  number: Yup.string()\n    .min(5, 'Must be 5 characters or more')\n    .max(30, 'Must be 30 characters or less')\n    .required('Required'),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, number }, actions) => {\n    const isUniqueContact = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const isUniqueNumber = contacts.some(contact => contact.number === number);\n\n    if (isUniqueContact) {\n      return Notify.failure(`Contact ${name} is already in contacts.`);\n    }\n    if (isUniqueNumber) {\n      return Notify.failure(`Number ${number} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n    Notify.info(`${name} added to your Phonebook`);\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={INITIAL_VALUE}\n      validationSchema={ContactFormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormControl>\n          <FormLabel>\n            Name\n            <Field\n              as={Input}\n              name=\"name\"\n              type=\"text\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              variant=\"filled\"\n            />\n          </FormLabel>\n          <ErrorMessage name=\"name\" component=\"p\" />\n        </FormControl>\n\n        <FormControl>\n          <FormLabel>\n            Number\n            <Field\n              as={Input}\n              name=\"number\"\n              type=\"tel\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              variant=\"filled\"\n            />\n          </FormLabel>\n          <ErrorMessage name=\"number\" component=\"p\" />\n        </FormControl>\n        <Center>\n          <Button type=\"submit\" bg=\"gray.100\">\n            Add contact\n          </Button>\n        </Center>\n      </Form>\n    </Formik>\n  );\n};\n\nexport { ContactForm };\n","import styled from 'styled-components';\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  height: 60px;\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nexport const InputStyled = styled.input`\n  /* margin-left: 20px;\n  margin-right: 20px; */\n`;\n","import { InputStyled } from './Filter.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { selectFilterValue } from 'redux/contacts/selectors';\nimport { FormControl, VStack, Input, FormLabel } from '@chakra-ui/react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilterValue);\n\n  const handleSetFilter = e => {\n    dispatch(setFilterValue(e.target.value));\n  };\n\n  return (\n    <VStack spacing={2} align=\"flex-start\">\n      <FormControl>\n        <FormLabel>\n          Find contacts by name or number\n          <InputStyled\n            as={Input}\n            type=\"text\"\n            value={filter}\n            title=\"Enter name or number\"\n            onChange={handleSetFilter}\n            variant=\"filled\"\n          />\n        </FormLabel>\n      </FormControl>\n    </VStack>\n  );\n};\n\nexport { Filter };\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 4px;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  margin-top: 1px;\n  :hover {\n    color: blue;\n  }\n`;\n\nexport const ContactBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nexport const ButtonBlock = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nexport const Button = styled.button`\n  /* border: none; */\n  margin: 0;\n  padding: 0;\n  width: auto;\n  overflow: visible;\n  line-height: 0;\n  float: right;\n\n  /* background: transparent; */\n`;\n\nexport const Label = styled.label`\n  font-size: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 140px;\n  font-size: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport { MdDeleteForever, MdEdit, MdSave } from 'react-icons/md';\nimport {\n  Button,\n  ListItem,\n  Label,\n  Input,\n  ButtonBlock,\n  ContactBlock,\n} from './ContactItem.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact, editContact } from 'redux/contacts/operations';\n\nconst ContactItem = ({ index, contact }) => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleEditContact = () => {\n    if (!isEdit) {\n      setIsEdit(true);\n    } else {\n      setIsEdit(false);\n      dispatch(editContact({ id: contact.id, name, number }));\n    }\n  };\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const onSubmit = e => {\n    if (e.key !== 'Enter') {\n      return;\n    }\n    handleEditContact();\n  };\n\n  return (\n    <ListItem>\n      <span>{index + 1}.</span>\n      <ContactBlock>\n        {isEdit ? (\n          <form onKeyDown={onSubmit}>\n            <Label>\n              Name:&nbsp;\n              <Input\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n                title=\"Edit name\"\n                type=\"text\"\n              />\n            </Label>\n            <Label>\n              Number:&nbsp;\n              <Input\n                name=\"number\"\n                value={number}\n                onChange={handleChange}\n                title=\"Edit phone number\"\n                type=\"tel\"\n              />\n            </Label>\n          </form>\n        ) : (\n          <>\n            <span>{name} :</span> &nbsp;\n            <span>{number}</span>\n          </>\n        )}\n      </ContactBlock>\n      <ButtonBlock>\n        <Button type=\"button\" onClick={handleEditContact} role=\"Edit contact\">\n          {isEdit ? <MdSave /> : <MdEdit />}\n        </Button>\n        <Button\n          type=\"button\"\n          onClick={handleDeleteContact}\n          role=\"Delete contact\"\n        >\n          <MdDeleteForever />\n        </Button>\n      </ButtonBlock>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport { ContactItem };\n","import { List } from './ContactList.styled';\nimport { ContactItem } from '../ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <div>\n      <List>\n        {visibleContacts.map((contact, idx) => (\n          <ContactItem key={contact.id} contact={contact} index={idx} />\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport { ContactList };\n","import styled from 'styled-components';\n\nexport const WrapperStyled = styled.div`\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  padding: 5px;\n  background-color: #fff;\n  border-radius: 8px;\n\n  > * {\n    &:last-child {\n      max-height: 429px;\n      overflow: auto;\n    }\n  }\n`;\n","import { WrapperStyled } from './Wrapper.styled';\n\nconst Wrapper = ({ children }) => <WrapperStyled>{children}</WrapperStyled>;\n\nexport { Wrapper };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { Container } from '../components/Container';\nimport { Section } from '../components/Section';\nimport { ContactForm } from '../components/ContactForm';\nimport { Filter } from '../components/Filter';\nimport { ContactList } from '../components/ContactList';\nimport { Wrapper } from 'components/Wrapper/Wrapper';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  // const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Wrapper>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Search\">\n          <Filter />\n        </Section>\n\n        <Section title=\"Contacts\">\n          {error && <b>Error: {error}</b>}\n          {isLoading && <p>Request in progress...</p>}\n\n          <ContactList />\n        </Section>\n      </Wrapper>\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectFilteredContacts","createSelector","filterValue","contact","name","toLowerCase","number","join","includes","trim","handleFilterContacts","ContainerStyled","styled","div","_templateObject","_taggedTemplateLiteral","Container","_ref","children","_jsx","Title","h2","SectionStyle","_templateObject2","Section","title","_jsxs","Form","FormFormik","ErrorMessage","YupErrorMessage","label","_templateObject3","FieldFormik","_templateObject4","button","_templateObject5","INITIAL_VALUE","ContactFormSchema","Yup","shape","min","max","required","ContactForm","dispatch","useDispatch","useSelector","Formik","initialValues","validationSchema","onSubmit","actions","isUniqueContact","some","isUniqueNumber","Notify","failure","concat","addContact","info","resetForm","FormControl","FormLabel","Field","as","Input","type","pattern","variant","component","Center","Button","bg","InputStyled","input","Filter","VStack","spacing","align","value","onChange","e","setFilterValue","target","List","ul","ListItem","li","ContactBlock","ButtonBlock","Label","_templateObject6","ContactItem","index","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","_useState5","_useState6","isEdit","setIsEdit","handleChange","_e$target","handleEditContact","editContact","id","onKeyDown","key","_Fragment","onClick","role","MdSave","MdEdit","deleteContact","MdDeleteForever","ContactList","visibleContacts","map","idx","WrapperStyled","Wrapper","Contacts","useEffect","fetchContacts"],"sourceRoot":""}